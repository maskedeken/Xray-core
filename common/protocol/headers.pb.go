// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/protocol/headers.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SecurityType int32

const (
	SecurityType_UNKNOWN           SecurityType = 0
	SecurityType_LEGACY            SecurityType = 1
	SecurityType_AUTO              SecurityType = 2
	SecurityType_AES128_GCM        SecurityType = 3
	SecurityType_CHACHA20_POLY1305 SecurityType = 4
	SecurityType_NONE              SecurityType = 5
	SecurityType_ZERO              SecurityType = 6
)

var SecurityType_name = map[int32]string{
	0: "UNKNOWN",
	1: "LEGACY",
	2: "AUTO",
	3: "AES128_GCM",
	4: "CHACHA20_POLY1305",
	5: "NONE",
	6: "ZERO",
}

var SecurityType_value = map[string]int32{
	"UNKNOWN":           0,
	"LEGACY":            1,
	"AUTO":              2,
	"AES128_GCM":        3,
	"CHACHA20_POLY1305": 4,
	"NONE":              5,
	"ZERO":              6,
}

func (x SecurityType) String() string {
	return proto.EnumName(SecurityType_name, int32(x))
}

func (SecurityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e65096023cd8c60a, []int{0}
}

type SecurityConfig struct {
	Type                 SecurityType `protobuf:"varint,1,opt,name=type,proto3,enum=xray.common.protocol.SecurityType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SecurityConfig) Reset()         { *m = SecurityConfig{} }
func (m *SecurityConfig) String() string { return proto.CompactTextString(m) }
func (*SecurityConfig) ProtoMessage()    {}
func (*SecurityConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65096023cd8c60a, []int{0}
}

func (m *SecurityConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityConfig.Unmarshal(m, b)
}
func (m *SecurityConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityConfig.Marshal(b, m, deterministic)
}
func (m *SecurityConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityConfig.Merge(m, src)
}
func (m *SecurityConfig) XXX_Size() int {
	return xxx_messageInfo_SecurityConfig.Size(m)
}
func (m *SecurityConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityConfig proto.InternalMessageInfo

func (m *SecurityConfig) GetType() SecurityType {
	if m != nil {
		return m.Type
	}
	return SecurityType_UNKNOWN
}

func init() {
	proto.RegisterEnum("xray.common.protocol.SecurityType", SecurityType_name, SecurityType_value)
	proto.RegisterType((*SecurityConfig)(nil), "xray.common.protocol.SecurityConfig")
}

func init() {
	proto.RegisterFile("common/protocol/headers.proto", fileDescriptor_e65096023cd8c60a)
}

var fileDescriptor_e65096023cd8c60a = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4d, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0xcf, 0x48, 0x4d, 0x4c,
	0x49, 0x2d, 0x2a, 0xd6, 0x03, 0x0b, 0x08, 0x89, 0x54, 0x14, 0x25, 0x56, 0xea, 0x41, 0xd4, 0xe8,
	0xc1, 0xd4, 0x28, 0x79, 0x70, 0xf1, 0x05, 0xa7, 0x26, 0x97, 0x16, 0x65, 0x96, 0x54, 0x3a, 0xe7,
	0xe7, 0xa5, 0x65, 0xa6, 0x0b, 0x99, 0x71, 0xb1, 0x94, 0x54, 0x16, 0xa4, 0x4a, 0x30, 0x2a, 0x30,
	0x6a, 0xf0, 0x19, 0x29, 0xe9, 0x61, 0xd3, 0xa6, 0x07, 0xd3, 0x13, 0x52, 0x59, 0x90, 0x1a, 0x04,
	0x56, 0xaf, 0x95, 0xc3, 0xc5, 0x83, 0x2c, 0x2a, 0xc4, 0xcd, 0xc5, 0x1e, 0xea, 0xe7, 0xed, 0xe7,
	0x1f, 0xee, 0x27, 0xc0, 0x20, 0xc4, 0xc5, 0xc5, 0xe6, 0xe3, 0xea, 0xee, 0xe8, 0x1c, 0x29, 0xc0,
	0x28, 0xc4, 0xc1, 0xc5, 0xe2, 0x18, 0x1a, 0xe2, 0x2f, 0xc0, 0x24, 0xc4, 0xc7, 0xc5, 0xe5, 0xe8,
	0x1a, 0x6c, 0x68, 0x64, 0x11, 0xef, 0xee, 0xec, 0x2b, 0xc0, 0x2c, 0x24, 0xca, 0x25, 0xe8, 0xec,
	0xe1, 0xe8, 0xec, 0xe1, 0x68, 0x64, 0x10, 0x1f, 0xe0, 0xef, 0x13, 0x69, 0x68, 0x6c, 0x60, 0x2a,
	0xc0, 0x02, 0xd2, 0xe0, 0xe7, 0xef, 0xe7, 0x2a, 0xc0, 0x0a, 0x62, 0x45, 0xb9, 0x06, 0xf9, 0x0b,
	0xb0, 0x39, 0xc5, 0x71, 0x49, 0x24, 0xe7, 0xe7, 0x62, 0x75, 0x5c, 0x00, 0x63, 0x94, 0x66, 0x7a,
	0x66, 0x49, 0x46, 0x69, 0x12, 0x48, 0x46, 0xbf, 0xa2, 0x24, 0xa7, 0x58, 0x1f, 0xa4, 0x4e, 0x37,
	0x39, 0xbf, 0x28, 0x55, 0x1f, 0x2d, 0x90, 0x56, 0x31, 0x89, 0x44, 0x80, 0xcc, 0x70, 0x86, 0x98,
	0x11, 0x00, 0x15, 0x4e, 0x62, 0x03, 0x2b, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x8f, 0xe9,
	0x9d, 0x20, 0x55, 0x01, 0x00, 0x00,
}
